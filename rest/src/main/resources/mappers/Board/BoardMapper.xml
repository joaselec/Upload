<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

     <!-- 게시글 전체 목록 조회 및 검색조회까지 -->
	<select id="listAll" resultType="com.my.rest.model.BoardVO">
	    <!-- 목록 조회 및 페이징 전체 쿼리 -->
	    <include refid="pagingHeader"></include>
	        <!-- SELECT rownum, bno, title, content, b.regdate, viewcnt, user_name as userName  -->
	        SELECT bno, title, content, b.regdate, viewcnt, user_name as userName
	        FROM tbl_board b, tbl_member m
	        <include refid="search"></include>
	        ORDER BY bno ASC, b.regdate ASC 
	    <include refid="pagingFooter"></include>    
	</select>
 
	<!-- 01_02. 게시글 레코드 갯수 -->
	<select id="countArticle" resultType="int">
	 
	    SELECT COUNT(*) 
	    FROM tbl_board b, tbl_member m
	 
	    <!-- WHERE절을 include 태그로 삽입 -->
	    <include refid="search"></include>
	 
	</select>
	
	
    <!-- 02. 게시글 작성 -->
    <insert id="insert">
        INSERT INTO tbl_board (
     
          title, 
          content, 
          writer
        ) VALUES (
          
          #{title},
          #{content},
          #{writer}
        )
    </insert>
    <!--03. 게시글 상세보기 조회 -->
    <select id="view" resultType="com.my.rest.model.BoardVO">
        SELECT * FROM tbl_board 
        WHERE bno = #{bno}
    </select>
    <!-- 04. 게시글 조회수 증가처리 -->
    <update id="increaseViewcnt">
        UPDATE tbl_board SET viewcnt = viewcnt + 1 
        WHERE bno = #{bno}
    </update>
    <!-- 05. 게시글 수정처리 -->
    <update id="updateArticle">
        UPDATE tbl_board SET
            title = #{title},
            content = #{content},
            writer = #{writer}
        WHERE bno = #{bno}
    </update>
    <!-- 06. 게시글 삭제처리 -->
    <delete id="deleteArticle">
        DELETE FROM tbl_board
        WHERE bno = #{bno}
    </delete>
    
    <!-- sql code 조각 -->
	<!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘수 있다. -->
	<sql id="search">
	    <choose>
	        <!-- 검색옵션이 전체 검색일 경우 -->
	        <when test="searchOption == 'all'">
		        WHERE 1=1
		        <!-- b.writer = m.user_id -->
		        AND    
	            (user_name like concat('%',#{keyword},'%')
	            OR content like concat('%',#{keyword},'%')
	            OR title like concat('%',#{keyword},'%'))
	        </when>
	    
	        <!-- 전체 검색이 아닐 경우 -->
	        <otherwise>
	            <!-- WHERE b.writer = m.user_id  --> 
	            WHERE 1=1
	            AND ${searchOption} like concat('%',#{keyword},'%')
	        </otherwise>
	    </choose>
	</sql>
	
	<!-- 페이징 sql -->
	<sql id="pagingHeader">
		<![CDATA[			
		    SELECT * FROM (
		        SELECT @rownum:=@rownum+1 as rn, A.* FROM (
	    ]]>
	</sql>
	<sql id="pagingFooter">
	        ) A, (SELECT @rownum:=0) D
	    )C WHERE rn BETWEEN #{start} AND #{end}
	</sql>
</mapper>
